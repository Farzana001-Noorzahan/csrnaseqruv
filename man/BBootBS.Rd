% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2-DataBS.R
\name{BBootBS}
\alias{BBootBS}
\title{Repeatedly Run Backward Selection for the Covariates Including Pseudo-Variables}
\usage{
BBootBS(
  B = 100,
  ncores = 1,
  counts,
  FixCov,
  VarCov,
  m = 3,
  lambda,
  option = "OWN",
  print.progress = FALSE
)
}
\arguments{
\item{B}{a numerical value representing the number of
sets of the pseudo-variables. Usually, \code{B = 100} is
good enough for this method.}

\item{ncores}{number of cores to use for parallel computing via
\code{\link[parallel]{mclapply}}.}

\item{counts}{a numerical  \code{matrix} of raw counts
Counts must be non-negative and NAs are not permitted.}

\item{FixCov}{a \code{data.frame} of the covariates that
are always included in the model.}

\item{VarCov}{a \code{data.frame} of the covariates subjected to  selection.}

\item{m}{number of generated pseudo-variables}

\item{lambda}{a vector of critical thresholds for the relevance measure.
The typical \code{lambda} has range from 1 to 10.}

\item{option}{the method to generate pseudo-variables
This is either one of these \code{"WN", "RX", "OWN", "ORX"}.}

\item{print.progress}{logical. If \code{TRUE} the print out the progress of
backward selection.}
}
\value{
A list of two components
\item{USP}{a matrix of B x 2*length(lambda) where each
row includes  \code{U} and \code{SP}, which is the output of \link{BootBS} for
each replication.}
\item{mPhoCov}{number of generated pseudo-variables}
}
\description{
This function performs \code{\link{BootBS}} \code{B} times to
obtain a matrix of B x 2*length(lambda), each row is a vector of U and S, which are the output of \link{BootBS} function
for each replication.
}
\examples{
lambdamax <- 5
lambda <- c(seq(1, lambdamax, length = 800))
data(FixCov)
data(VarCov)
data(counts)
print.progress <- FALSE
m <- 5
option <- "OWN"
B <- 2
ncores <- 1
BBootBSOut<-csrnaseq:::BBootBS(B, ncores, counts[1:100,],
FixCov, VarCov, m,  lambda, option, print.progress)
names(BBootBSOut)
dim(BBootBSOut$USP)
BBootBSOut$m
}
