% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/4-FSRBSSimulation.R
\name{FSR1SimBS}
\alias{FSR1SimBS}
\title{Analyze one simulated dataset}
\usage{
FSR1SimBS(
  RealDataOut,
  nGene,
  nrep,
  B,
  m,
  lambdamax,
  alpha0,
  ncores,
  print.progress,
  saveall = FALSE,
  savesim = TRUE,
  foldername = "SimulationOut"
)
}
\arguments{
\item{RealDataOut}{the output of voom-limma differential expression analysis
implemented in \link{VoomPv} for RFI RNA-seq data. This analysis is performed in the
script 2-RSRBS_ModelSize_Simulation.R  in analysis folder.}

\item{nGene}{number of genes in simulated count data}

\item{nrep}{replication index, used in set.seed within this function}

\item{B}{a numerical value representing the number of
sets of the pseudo-variables. Usually, \code{B = 100} is
good enough for this method.}

\item{m}{number of generated pseudo-variables}

\item{lambdamax}{the maximum value of  lambda vector}

\item{alpha0}{the nominal FSR  level.}

\item{ncores}{number of cores to use for parallel computing via
\code{\link[parallel]{mclapply}}.}

\item{print.progress}{logical. If \code{TRUE} the print out the progress of
backward selection.}

\item{saveall}{logical. If it is TRUE, then save all output, otherwise, just save
the best covariate BestCovOut, which is the output from \link{BestCovBS}}

\item{savesim}{logical. If TRUE, save all the output including SimCounts to
`SimulationOut/ModelSize_*_nGene_*_B_*_m_*_alpha0_*/nrep_*.rds`}

\item{foldername}{a character string that is the name of folder that saves
the result. Defaul is `foldername = "SimulationOut"  `.}
}
\description{
This function perform variable selection and differential expression analysis
for one simulated count data. The
output is saved in the directory `foldername/...`. The result is
list of 4 components, each is a list of 2 vectors of selected covariates
under alpha_RE and alpha_ER FSR.
}
\examples{
\dontrun{
RealDataOut <- readRDS("./analysis/RealDataOutBS/ModelSize_6.rds")
ModelSize <- 6
nGene <- 2000
nrep <- 1
B <- 4
m <- 4
lambdamax <- 5
alpha0 <- 0.05
ncores <- 4
print.progress <- FALSE
saveall <- FALSE
savesim <- TRUE
FSR1SimBSOut <- FSR1SimBS(RealDataOut, nGene, nrep, B, m, lambdamax, alpha0, ncores, print.progress, saveall, savesim)
}
}
